# Generated by Django 4.0.3 on 2022-04-28 10:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('username', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_realtor', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('password', models.CharField(max_length=250)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_name', models.CharField(default='property name', max_length=500)),
                ('property_location', models.CharField(default='property location', max_length=500)),
                ('list_type', models.CharField(choices=[('FS', 'For Sale'), ('FR', 'For Rent')], default='FS', max_length=25)),
                ('property_city', models.CharField(choices=[('AB', 'Abuja'), ('LG', 'Lagos'), ('OS', 'Osun'), ('IB', 'Ibadan')], default='AB', max_length=25)),
                ('price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('home_type', models.CharField(choices=[('SH', 'Single-family'), ('SD', 'Semi-detached'), ('AP', 'Apartment'), ('TH', 'Townhomes'), ('MF', 'Multi-family'), ('MH', 'Mobile/Manufactured'), ('CO', 'Condo')], default='Single-family', max_length=50)),
                ('property_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('bedrooms', models.IntegerField(default=0)),
                ('full_bathrooms', models.IntegerField(default=0)),
                ('half_bathrooms', models.IntegerField(default=0)),
                ('three_quarter_bathrooms', models.IntegerField(default=0)),
                ('one_quarter_bathrooms', models.IntegerField(default=0)),
                ('property_tel', models.BigIntegerField(default=0)),
                ('garage', models.IntegerField(default=0)),
                ('wifi', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('indoor_pool', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('security', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('equiped_kitchen', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('air_con', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('solar_power', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('fireplace', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('attic', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('chandelier', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('dishwasher', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('dryer', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('freezer_fridge', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('oven', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('washing_machine', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('garbage_disposer', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('smoke_detector', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('patio', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('bbq_area', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('pool', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('porch', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('sprinkler', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('spa', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('garden', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('fence', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('bball', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('gate', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('sport_arena', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('fitness_arena', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('tennis_court', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('parking', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('laundry_room', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('dining_room', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('library', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('office', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('workshop', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('closets', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('basement', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=25)),
                ('lot_size', models.IntegerField(default=0)),
                ('yard_size', models.IntegerField(default=0)),
                ('images', models.FileField(upload_to='property_images')),
                ('description', models.TextField(max_length=1000)),
                ('complete', models.BooleanField(default=False)),
                ('built_on', models.DateTimeField(null=True)),
                ('listed_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('video_link', models.URLField(blank=True, max_length=350, null=True)),
                ('user_agent', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profilepic', models.ImageField(upload_to='agents profile image')),
                ('bio', models.CharField(max_length=700)),
                ('gov_id', models.FileField(upload_to='government ids')),
                ('business_id', models.FileField(upload_to='business ids')),
                ('utility_bills', models.FileField(upload_to='utility bills')),
                ('location', models.CharField(max_length=250)),
                ('tel', models.BigIntegerField()),
                ('in_business_since', models.DateTimeField(null=True)),
                ('website', models.URLField(null=True)),
                ('whatsapp', models.IntegerField(null=True)),
                ('facebook', models.URLField(null=True)),
                ('instagram', models.URLField(null=True)),
                ('twitter', models.URLField(null=True)),
                ('linkedin', models.URLField(null=True)),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
